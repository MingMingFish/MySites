/*
CSS寫法架構
    對標籤設定style:
        p{
            color:red;
            background-coloer:blue;
            ...
        }
        h1{
            CSS_code...
        }
    ------------------------------------------------------------
    對class設定style:
        .class-name{ //前面加點
        ...Code...
        }
    ------------------------------------------------------------
    對id設定style:
        #id-name{    //前面加#
            ...Code...
        }
    ------------------------------------------------------------
    對整個網頁:
        *{
            background-color:gray; 把網頁背景調為灰色
            color:red; 所有文字變為紅色
        }
    ------------------------------------------------------------
    對列表:
        ul li{
            在<ul>裡面找<li>標籤並套用
        }
        ul a{
            在<ul>裡面找到<a>標籤並套用
        }
    ------------------------------------------------------------
    以屬性尋找:
        [type]{
            套用到含有type屬性的物件
        }
    ------------------------------------------------------------
    以滑鼠滑過動態套用:
        NAME:hover{
            background-color:gray;
            "NAME"可套用以上各種寫法(p/./#/*...)
        }
    .
    #其他套用方式可Google: CSS 選擇器
------------------------------------------------------------------------------------------------------------------------
    設定動畫:
        @keyframes the-animation-name {
            from{background-color:red; top:10px; left:20px;} 可填入各種CSS，換色,移動等
            to{background-color:blue;}
        }
        或
        @keyframes the-animation-name{
            0% {CSS;}
            20% {CSS;}
            40% {CSS;}
            80% {CSS;}
            100% {CSS;}
        } 指在 animation-duration設定的秒數內跑到幾%時顯示的CSS樣式
        
        套用(可加 :hover ){
            animation-name:the-animation-name;
            animation-duration:2s;
            animation-iteration-count:number/infinite; 動畫重複次數/無限次;
            animation-delay:2s; 網頁載入後延遲幾秒開始動畫
        }

------------------------------------------------------------------------------------------------------------------------

常用代碼 可直接放進html的style
    
    一般設定:
        coler:red; 顏色(名稱/#FFFFFF/rgb/hsl)
        font-size:20px; 文字大小
        width:200px; 寬(像素)
        height:200px;   高
        max-width:800px; 最大寬度(超過就不會再寬，畫面窄會縮短)
    .
------------------------------------------------------------------------------------------------------------------------
    畫框框用:
        border:5px dashed/solid green; 外框: 粗5像素 虛線/實線 綠色;

        padding:20px; 框內空間
            padding-top/bottom/right/left -只用一邊
            padding: 20px 30px 40px 50px; -分別設定: top right bottom left
        margin: 20px; 框外空間 (可為負)
            使用方法與padding相同
    .
------------------------------------------------------------------------------------------------------------------------
    排版用:
        float:left/right; 將圖片/列表等物件浮起到左邊或右邊，使文字可與其並列
        display:block/inline;
            block: 會占用整行的物件，如<p></p>標籤
            inline: 占用實際使用空間的物件，如<span></span>標籤
            使用範例:
            <p style="display:inline;">將p標籤顯示方式轉為inline</p>
        ------------------------------------------------------------
        display:flex;
            對class套用該屬性，區塊會並排，
            然後對個別設定:
                flex:1; / flex:2; / flex:1;
            則該3個區塊會分別佔版面寬度的 1/4, 1/2, 1/4。也就是調整佔比
            另外個別設定:
                order:0; /...
            物件會以order的數值小到大排列

            flex-direction:column; 將排列改為直排，滿了則換列，flex會變為調高度
            flex-direction:column-reverse; 由下而上排列
            flex-direction:row; 為預設，可改回橫排
            flex-direction:row-reverse; 由右到左排列
            justify-content:center;
            放到對class設定，依主軸置中/還有其他對齊參數這裡跳過
            align-items:center; 依次軸置中(換行時會平均分配空間後分別置中)
            align-content:center; 依次軸整體置中

    .
------------------------------------------------------------------------------------------------------------------------
    設定位置:
        position:fixed; top/right/bottom/left:0px;
            將位置固定(不受畫面捲動影響)
            位置可不指定，會固定在初始位置
            可同時指定兩個方向 如右上角> top:0px; right:0px;
            數值指與該邊的距離

        position:relative; top/right/bottom/left:0px;
            相對定位(將位置從原位向設定方向移動該距離)
            一樣可設定兩個不衝突的方向
            移動後會覆蓋沒移動的東西
            
        position:absolute; top/right/bottom/left:0px;
            絕對定位(將物件獨立為一層)
            將不跟其他物件互相影響
            在div等容器內，若外層容器也有定位，則會以外層的邊框來定位
    .
------------------------------------------------------------------------------------------------------------------------
    物件外表:
        opacity:0.5; 透明度:0為透明，1為不透明，數值為0~1之間

        border-radius:20px 30px 40px 50px; 圓角
            只設定一個值為4角同時
            4個分別設定為左上開始順時鐘設定
    .
*/
/*
------------------------------------------------------------------------------------------------------------------------
將CSS引入html
    <link rel="stylesheet" href="style.css"/>
*/
@keyframes background-rainbow{
    0% {background-color:red;}
    16% {background-color:orange;}
    33% {background-color:yellow;}
    50% {background-color:green;}
    66% {background-color:blue;}
    82% {background-color:purple;}
    100% {background-color:red;}
}
.CSStest{
    border: 5px solid black;
    padding: 10px;
    color: white;
    background-color: gray;
}
.CSStest:hover {
    border: 5px; ;
    padding: 25px;
    animation-name:background-rainbow;
    animation-duration:1s;
    animation-iteration-count:infinite;
}